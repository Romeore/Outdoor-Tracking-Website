stages: 
  - build
  - test
  - deploy

website_build:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  script:
    - docker info
    - echo $CI_REGISTRY_USER
    - echo $CI_REGISTRY
    - echo $CI_PROJECT_NAME
    - echo $CI_PROJECT_NAMESPACE
    - echo $CI_PROJECT_PATH
    - echo $CI_PROJECT_ROOT_NAMESPACE
    - echo $CI_REGISTRY_IMAGE
    - echo $CI_REGISTRY_PASSWORD |docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - docker build -t $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:latest

.website_test: 
  image: node:lts-alpine
  stage: test
  rules: 
    - when: manual
    - allow_failure: true
  services:
    - docker:dind
  script:
    - pwd
    - ls -al
    - yarn test

website_deploy: 
  image: alpine:latest
  stage: deploy
  services:
    - docker:dind
  script:
    - chmod og= $ID_ED25519
    - apk update && apk add openssh-client
    - ssh -i $ID_ED25519 -o StrictHostKeyChecking=no $BIP_VM1_USER@$BIP_VM1_IP "echo $CI_REGISTRY >> erfolg"
    - ssh -i $ID_ED25519 -o StrictHostKeyChecking=no $BIP_VM1_USER@$BIP_VM1_IP "echo $CI_REGISTRY_PASSWORD |docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin"
    - ssh -i $ID_ED25519 -o StrictHostKeyChecking=no $BIP_VM1_USER@$BIP_VM1_IP "docker pull $CI_REGISTRY_IMAGE:latest"
    - ssh -i $ID_ED25519 -o StrictHostKeyChecking=no $BIP_VM1_USER@$BIP_VM1_IP "docker container rm -f findo || true"
    - ssh -i $ID_ED25519 -o StrictHostKeyChecking=no $BIP_VM1_USER@$BIP_VM1_IP "docker run -d -p 80:80 --name findo $CI_REGISTRY_IMAGE:latest"

  only:
    - main